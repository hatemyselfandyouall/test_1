<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="example.model.dao.UserWorkMapper">

	<resultMap id="BASE-RESULT" type="example.model.dataobject.UserWork">
        <result property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="imgPath" column="img_path" />
        <result property="imgType" column="img_type" />
        <result property="wkSize" column="wk_size" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />

	</resultMap>

	
  	<insert id="insert" parameterType="example.model.dataobject.UserWork">
  		INSERT INTO user_work ( 
			user_id,img_path,img_type,wk_size,create_time,update_time			
  		) VALUES (
			#{userId},#{imgPath},#{imgType},#{wkSize},#{createTime},#{updateTime}		
  		)   
  		<selectKey resultType="Integer" keyProperty="id">    
      		SELECT LAST_INSERT_ID()     
		</selectKey> 
  	</insert>
  	
  	<update id="update" parameterType="example.model.dataobject.UserWork" >
		UPDATE
			user_work
		SET
            <if test="id!=null"> id = #{id} </if>
            <if test="userId!=null">, user_id = #{userId} </if>
            <if test="imgPath!=null">, img_path = #{imgPath} </if>
            <if test="imgType!=null">, img_type = #{imgType} </if>
            <if test="wkSize!=null">, wk_size = #{wkSize} </if>
            <if test="createTime!=null">, create_time = #{createTime} </if>
            <if test="updateTime!=null">, update_time = #{updateTime} </if>

		<where>
			id = #{id}
		</where>
	</update>
	
	
	<select id="getByKey" resultMap="BASE-RESULT">
		SELECT * FROM
			user_work
		<where>
			id = #{key}
		</where>
	</select>
	
	<delete id="deleteByKey">
		DELETE FROM
			user_work
		<where>
			id = #{key}
		</where>
	</delete>
	
	<select id="findEntitys" parameterType="map" resultMap="BASE-RESULT">
		SELECT * FROM
			user_work
		<where>
			<include refid="compareParamColumns" />
		</where>
		<if test="param.orderByStr!=null">
			order by ${param.orderByStr}
		</if>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>


	<select id="getEntitysCount" parameterType="map" resultType="int">
		SELECT count(*) FROM
			user_work
		<where>
			<include refid="compareParamColumns" />
		</where>
	</select>
	
	<sql id="compareParamColumns">
		1
        <if test="param.id!=null">
            AND  id = #{param.id}
        </if>
        <if test="param.userId!=null">
            AND  user_id = #{param.userId}
        </if>
        <if test="param.imgPath!=null">
            AND  img_path = #{param.imgPath}
        </if>
        <if test="param.imgType!=null">
            AND  img_type = #{param.imgType}
        </if>
        <if test="param.wkSize!=null">
            AND  wk_size = #{param.wkSize}
        </if>
        <if test="param.createTime!=null">
            AND  create_time = #{param.createTime}
        </if>
        <if test="param.updateTime!=null">
            AND  update_time = #{param.updateTime}
        </if>

	</sql>
	
</mapper>
